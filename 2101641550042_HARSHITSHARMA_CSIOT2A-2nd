#include<stdio.h>
#include<stdlib.h>
#define MAX 20
void enqueue_rear(int queue[],int *front,int *rear,int item)
{
	if(*front==(*rear+1)%MAX)
	{
		printf("\n Overflow");
		return;
	}
	if(*front==-1)
	{
		*front=*rear=0;
	}
	else{
		*rear=(*rear+1)%MAX;
	}
	queue[*rear]=item;	
}
void dequeue_front(int queue[],int *front,int *rear)
{
	if(*front==-1)
	{
		printf("\n Underflow");
		return;
	}
	printf("\n Deleted item=%d",queue[*front]);
	if(*front==*rear)
	{
		*front=*rear=-1;
		
	}
	else
	{
		*front=(*front+1)%MAX;
	}
}
void display(int queue[],int front,int rear)
{
	int i;
	if(front==-1)
	{
		printf("\n Underflow");
		return;
	}
	if(front<=rear)
	{
		for(i=front;i<=rear;i++)
		printf("\t%d->",queue[i]);
	}
	else
	{
		for(i=front;i<MAX;i++)
		printf("\t%d->",queue[i]);
		for(i=0;i<rear;i++)
		printf("\t%d",queue[i]);
	}
}

int main()
{
	int front,rear,queue[MAX];
	front=rear=-1;
	int choice,item;
	while(1)
	{
		printf("\n......Queue Menu......");
		printf("\n1. For Enqueue");
		printf("\n2. For Dequeue");
		printf("\n3. For Display");
			
		printf("\nEnter the choice: ");
		scanf("%d",&choice);
		switch(choice)
		{
			case 1: printf("\n Enter the item: ");
					scanf("%d",&item);
					enqueue_rear(queue,&front,&rear,item);
					break;
			case 2: dequeue_front(queue,&front,&rear);
					break;
			case 3: display(queue,front,rear);
					break;
			default:
					exit(1);	
		}
	}
}
